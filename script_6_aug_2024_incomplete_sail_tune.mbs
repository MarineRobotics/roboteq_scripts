top:

priority = getvalue(_DIN, 3) ' Replace 2 with the digital input on which pixhawk aux 1 is connected
serial = 0
RC = 1
' If prioritySig is high, use setconfig to set RC to highest priority, serial to second highest
' If prioritySig is low, use setconfig to set serial to highest priority, RC to second highest
if priority = 1 then
    setconfig(_CPRI, 1, RC)
    setconfig(_CPRI, 2, serial)
else
    setconfig(_CPRI, 1, serial)
    setconfig(_CPRI, 2, RC)
end if
 
' Motor 1
if getvalue(_E, 1) < 20 and getvalue(_E, 1) > -20   'uses loop error to adjust gains, you can change the 20 & -20 to whatever loop error works best for your case
    setconfig(_KPG, 1, 0)        'sets "speed" Proportional gain to 0
    setconfig(_KIG, 1, 0)        'sets "speed" integral gain to 0
    setconfig(_KDG, 1, 0)        'sets "speed" derivative gain to 0
    setconfig(_KPG, 3, 0)        'sets "position" Proportional gain to 0
    setconfig(_KIG, 3, 0)        'sets "position" integral gain to 0
    setconfig(_KDG, 3, 0)        'sets "position" derivative gain to 0
    'print("lower", "\n")
else
    setconfig(_KPG, 1, 0000000)    'chnage 3rd value to your "speed" proportional gain*1,000,000 (currently 0*1,000,00)
    setconfig(_KIG, 1, 2500000)    'chnage 3rd value to your "speed" integral gain*1,000,000 (currently 2.5*1,000,00)
    setconfig(_KDG, 1, 0000000)    'chnage 3rd value to your "speed" derivative gain*1,000,000 (currently 0*1,000,00)
    setconfig(_KPG, 3, 40000000)    'chnage 3rd value to your "position" proportional gain*1,000,000 (currently 40*1,000,00)
    setconfig(_KIG, 3, 0000000)    'chnage 3rd value to your "position" integral gain*1,000,000 (currently 0*1,000,00)
    setconfig(_KDG, 3, 1400000)    'chnage 3rd value to your "position" derivative gain*1,000,000 (currently 1.4*1,000,00)
    'print("higher", "\n")
end if

' Motor 2
if getvalue(_E, 2) < 20 and getvalue(_E, 2) > -20   'uses loop error to adjust gains, you can change the 20 & -20 to whatever loop error works best for your case
    setconfig(_KPG, 2, 0)        'sets "speed" Proportional gain to 0
    setconfig(_KIG, 2, 0)        'sets "speed" integral gain to 0
    setconfig(_KDG, 2, 0)        'sets "speed" derivative gain to 0
    setconfig(_KPG, 4, 0)        'sets "position" Proportional gain to 0
    setconfig(_KIG, 4, 0)        'sets "position" integral gain to 0
    setconfig(_KDG, 4, 0)        'sets "position" derivative gain to 0
    'print("lower", "\n")
else
    setconfig(_KPG, 2, 0000000)    'chnage 3rd value to your "speed" proportional gain*1,000,000 (currently 0*1,000,00)
    setconfig(_KIG, 2, 5500000)    'chnage 3rd value to your "speed" integral gain*1,000,000 (currently 5.5*1,000,00)
    setconfig(_KDG, 2, 0000000)    'chnage 3rd value to your "speed" derivative gain*1,000,000 (currently 0*1,000,00)
    setconfig(_KPG, 4, 34000000)    'chnage 3rd value to your "position" proportional gain*1,000,000 (currently 34*1,000,00)
    setconfig(_KIG, 4, 0000000)    'chnage 3rd value to your "position" integral gain*1,000,000 (currently 0*1,000,00)
    setconfig(_KDG, 4, 1400000)    'chnage 3rd value to your "position" derivative gain*1,000,000 (currently 1.4*1,000,00)
    'print("higher", "\n")
end if
 
wait(10)
goto top
